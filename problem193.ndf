
sieve is op limit {
  arr := limit reshape -1;
  arr@[1] := 1;
  for i with 1 + count (limit - 2) do
    if arr@[i] = -1 then
      c := 2;
      j := i + i;
      while j < limit do
        if c mod i = 0 then
          arr@[j] := 0
        else
          arr@[j] := arr@[j] * opposite i
        endif;
        j := j + i;
        c := c + 1;
      endwhile;
    else
      if arr@[i] < 0 then
        arr@[i] := 1;
      else
        if arr@[i] > 0 then
          arr@[i] := -1;
        endif;
      endif;
    endif;
  endfor;
  arr
};

main is {
  fulllimit := 1125899906842624;
  limitsqrt := 33554432;
  mobius := sieve limitsqrt;
  sum := 0;
  for i with count (limitsqrt - 1) do
    sum := sum + (mobius@[i] * floor (fulllimit / (i * i)))
  endfor;
  sum
};
