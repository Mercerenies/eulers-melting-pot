
do unsafe
    glob = transmute([]).toString.constructor("return this")();

    cmp = funct(x, y)
        xx = glob.eval("values_arr[" +' x +' "]");
        yy = glob.eval("values_arr[" +' y +' "]");
        if xx < yy then
            -1
        else if xx > yy then
            1
        else if x < y then
            -1
        else if x > y then
            1
        else
            0
        end end end end
    end;

    glob.primes_arr = [1, 1];
    glob.i = 2;
    do while glob.i < 100001 then
        glob.primes_arr.push(0);
        glob.i = glob.i + 1;
    end;
    glob.i = 2;
    do while glob.i < 100001 then
        if glob.eval("primes_arr[" +' glob.i +' "]") == 0 then
            j = glob.i + glob.i;
            do while j < 100001 then
                glob.eval("primes_arr[" +' j +' "] = " +' glob.i);
                j = j + glob.i;
            end;
        end;
        glob.i = glob.i + 1;
    end;

    glob.values_arr = [0, 1];
    glob.i = 2;
    do while glob.i < 100001 then
        prime_factor = glob.eval("primes_arr[" +' glob.i +' "]");
        if prime_factor == 0 then
            glob.values_arr.push(glob.i);
        else
            prev = glob.eval("values_arr[" +' (glob.i / prime_factor).0 +' "]");
            if (prev % prime_factor).0 == 0 then
                glob.values_arr.push(prev);
            else
                glob.values_arr.push(prev * prime_factor);
            end;
        end;
        glob.i = glob.i + 1;
    end;

    glob.nums_arr = [];
    glob.i = 1;
    do while glob.i < 100001 then
        glob.nums_arr.push(glob.i);
        glob.i = glob.i + 1;
    end;

    glob.nums_arr.sort(cmp);

    print(glob.eval("nums_arr[" +' 9999 +' "]"));
end;